# Test integer_validator method with valid integer value
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)  # No exception should be raised

# Test integer_validator method with valid integer value and another valid value
>>> bg.integer_validator("width", 89)  # No exception should be raised

# Test integer_validator method with invalid non-integer value
>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

# Test integer_validator method with invalid non-positive integer value
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0

# Test integer_validator method with invalid negative integer value
>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0
